version: '3.8'

services:
  backend:
    build: ./backend
    container_name: notification-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://mongo:27017/notification-system
      REDIS_URL: redis://redis:6379
    depends_on:
      - mongo
      - redis
    volumes:
      - ./backend/logs:/usr/src/app/logs
      - ./backend/.env:/usr/src/app/.env
    networks:
      - notification-network

  mongo:
    image: mongo:6
    container_name: notification-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secure_password
      MONGO_INITDB_DATABASE: notification-system
    volumes:
      - mongo-data:/data/db
    networks:
      - notification-network

  redis:
    image: redis:7-alpine
    container_name: notification-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - notification-network

  nginx:
    image: nginx:alpine
    container_name: notification-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - notification-network

volumes:
  mongo-data:
  redis-data:

networks:
  notification-network:
    driver: bridge
